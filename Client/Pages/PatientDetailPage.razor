@page "/patient-details/{PathParam}"
@using BlazorApp.Shared
@inject NavigationManager NavigationManager
@inject HttpClient Http


<PageTitle>Patient Detail Page</PageTitle>

@if (!siteLoaded)
{
	<div style="display: flex; justify-content: center; padding: 350px 0;">
		<MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
	</div>

}
else
{

	<MudContainer Class="mt-8" MaxWidth="MaxWidth.Large">


		<MudItem>
			<MudText Typo="Typo.h4" class="mt-8" Align="Align.Center" GutterBottom="true">Patient Detailed Information</MudText>
			<MudPaper Width="100%">
				<MudList Class="mt-8 ml-4">
					<MudText><b>Name:</b> @patient.Name</MudText>
					<MudText><b>URN:</b> @patient.URN</MudText>
					<MudText><b>Date of birth:</b> @patient.DateOfBirth?.Date.ToShortDateString()</MudText>
					<MudText><b>Bed:</b> @PathParam</MudText>
					<MudText><b>Presenting issue:</b> @patient.PresentingIssue</MudText>
				</MudList>
			</MudPaper>
		</MudItem>


		<MudText Typo="Typo.h4" class="mt-8" Align="Align.Center" GutterBottom="true">Comments</MudText>

		<MudSimpleTable Dense="@dense" Hover="@hover" Bordered="@bordered" Striped="@striped" Style="overflow-x: auto;">
			<thead style="background: #173274; color: white;">
				<tr>
					@foreach (var h in headings)
					{
						<th>@h</th>
					}
				</tr>
			</thead>
			<tbody>
				@foreach (var comment in patient.CommentHistory)
				{
					<tr>
						<td>@comment.DateTimeOfComment.Date</td>
						<td>@comment.DateTimeOfComment.TimeOfDay</td>
						<td>@comment.NurseAllocated</td>
						<td>@comment.CommentDescription</td>
					</tr>
				}
			</tbody>
		</MudSimpleTable>


		<MudTextField T="string" Label="Add a Comment" class="mt-8" Variant="Variant.Outlined" Text="@comment" Lines="8" />
		<MudItem Class="d-flex">
			<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Size="Size.Large" Class="mt-8" OnClick="(() => AddComment(comment))">Add Comment</MudButton>
			<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" DisableElevation="true" Color="Color.Primary" Size="Size.Large" Class="ml-8 mt-8" OnClick="NavigateToHomePage">Back</MudButton>

		</MudItem>

	</MudContainer>

}


@code {

	[Parameter]
	public string? PathParam { get; set; }

	private bool dense = false;
	private bool hover = true;
	private bool striped = false;
	private bool bordered = true;

	private bool siteLoaded = false;

	string comment = "";

	Patient patient = new Patient();

	string[] headings = { "Date", "Time", "Nurse", "Comment" };

	private void NavigateToHomePage()
	{
		NavigationManager.NavigateTo("/");
	}

	private void AddComment(string comment)
	{
		Comment commentObj = new Comment();
		commentObj.CommentDescription = comment;
		commentObj.NurseAllocated = patient.NurseAllocated;
		commentObj.DateTimeOfComment = DateTime.UtcNow;
		patient.CommentHistory.Add(commentObj);
	}

	protected override async Task OnInitializedAsync()
	{
		try
		{
			List<Patient> patients = await Http.GetFromJsonAsync<List<Patient>>("/api/Patients") ?? new List<Patient>();

			foreach (var patient in patients)
			{
				if (patient.PartitionKey == PathParam)
				{
					this.patient = patient;
				}
			}

		}
		catch (Exception ex)
		{
			Console.WriteLine(ex.ToString());
		}

		siteLoaded = true;
		StateHasChanged();
	}


}